{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAK,mEACxB,6BAAKH,EAAMI,QAAQC,OACnB,6BAAKL,EAAMI,QAAQE,YCHdC,EAAU,SAAAP,GAAK,OAEpB,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,UCLnBC,G,YAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAY,SACnBa,KAAK,SAASF,YAAgBA,EAC9BG,SAAYF,MCoEDG,E,kDAzCb,aAAc,IAAD,8BACX,gBAkBFH,aAAe,SAACI,GAEZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAlBvC,EAAKC,MAAQ,CACXd,SAAW,GACXW,YAAY,IALH,E,qDAYb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAU3C,WAEE,MAAkCC,KAAKN,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA1B,GAAO,OAC1CA,EAAQC,KAAK0B,cAAcC,SAASb,EAAYY,kBAEtD,OACE,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAWW,YAAY,qBAAqBC,aAAiBe,KAAKf,eAClE,cAAC,EAAD,CAAUL,SAAUqB,W,GApCVI,aCpBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7e763ca9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) =>(\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={'https://robohash.org/${props.monster.id}?set=set2&size=120x120'} />\r\n        <h4>{props.monster.name}</h4>\r\n        <h6>{props.monster.email}</h6>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList= props => (\r\n\r\n        <div className=\"card-list\">\r\n           { props.monsters.map(monster=>(\r\n              <Card key={monster.id} monster={monster} />\r\n              ))\r\n          }\r\n        </div>\r\n);\r\n\r\n"," import React from 'react';\r\n import './search-box.styles.css';\r\n\r\n export const SearchBox =({ placeholder, handleChange }) =>(\r\n    <input className = 'search' \r\n    type=\"search\" placeholder = { placeholder } \r\n    onChange= { handleChange } \r\n\r\n/>\r\n);\r\n \r\n\r\n\r\n\r\n","import React ,{ Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.components';\n{/*\nThis is the component build using a funtion\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/}\n\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField:''\n    };\n\n\n  }\n\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json() )\n    .then(users => this.setState({ monsters: users }));\n    \n  }\n\n  handleChange = (e) =>\n    {\n      this.setState({searchField: e.target.value});\n    }\n\n\n  render(){\n\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n          monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex.</h1>\n        <SearchBox placeholder='search monsters...' handleChange = { this.handleChange } />\n        <CardList monsters={filteredMonsters} />  \n    </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}